def last (a : List[Int], length : Int) : Int =>
//Test*/
    if length > 0 :
        a[length-1]
    else:
        0
/* 

            */
def nop => ()

def set (i : Int) : Int => i

def foo =>
    if True :
        1
    else :
        3

val x = (a : Int, b : Int => a + b : Int)
(a : Int, b : Int => a + b)

def oneliner(x: Int): Int => (x + 10)

oneliner(20)

val y: Int = oneliner(20)


def add (a : Int) =>
    (b : Int => a + b)

def functionReturn(x: Int): (Int => Int) =>
    def plusTen(y: Int, z: Int) =>
        y + 10 + z
    plusTen(x)


(a : Int, b : Int => a + b)(1) 